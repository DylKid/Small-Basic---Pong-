'Initialzie variables
height = 500 
width = 1000

paddleHeight = 100 
paddleWidth = 27
paddleBorderWidth = 3

ballRadius = 26
ballX = (width/2) - ballRadius
ballY = (height/2) - ballRadius

'Make sure the change in velocity's magnitude is between 0.5 and 1, but a little random to keep life fresh 
'ballDeltaX = (Math.GetRandomNumber(10)/10) 
'ballDeltaY = (Math.GetRandomNumber(10)/10)
'TextWindow.WriteLine("deltaX: " + ballDeltaX + " deltaY: " + ballDeltaY) 

'If it's less than 0.5 make it go in the opposite direction this means the ball has a chance to go
'in any direction at the start 
If(ballDeltaX < 0.5) Then 
  ballDeltaX = ballDeltaX - 1 
EndIf
If(ballDeltaY < 0.5) Then 
  ballDeltaY = ballDeltaY - 1
EndIf 

'TextWindow.WriteLine("deltaX: " + ballDeltaX + " deltaY: " + ballDeltaY) 

'Draw the paddles
GraphicsWindow.PenWidth = paddleBorderWidth 

'The Left Paddle (blue) 
GraphicsWindow.PenColor = "#00008B" 
GraphicsWindow.BrushColor = "#0000FF"
paddleLeft = Shapes.AddRectangle(paddleWidth, paddleHeight) 
paddleLeftY = (height/2) - (paddleHeight/2)
paddleLeftX = 10

'The Right Paddle (Red) 
GraphicsWindow.PenColor = "#8B0000"
GraphicsWindow.BrushColor = "#B22222" 
paddleRight = Shapes.AddRectangle(paddleWidth, paddleHeight) 
paddleRightY = (height/2) - (paddleHeight/2)
paddleRightX = width - (paddleWidth)

'The Ball 
GraphicsWindow.PenColor = "Peru" 
GraphicsWindow.BrushColor = "Chocolate" 
ball = Shapes.AddEllipse(ballRadius, ballRadius) 
Shapes.Move(ball, ballX, ballY) 

'Initialize the window 
'Draw the border 
GraphicsWindow.PenColor = "Black" 
GraphicsWindow.PenWidth = 5
GraphicsWindow.Height = height
GraphicsWindow.Width = width 
GraphicsWindow.DrawRectangle(0,0,GraphicsWindow.Width+10,GraphicsWindow.Height+10) 
Shapes.Move(paddleLeft, paddleLeftX, paddleLeftY)
Shapes.Move(paddleRight, paddleRightX, paddleRightY) 
GraphicsWindow.CanResize = "False"

collide = 0
counter = 0 
collisionCounter = 0

'Main game loop 
While(1 = 1)
  
  'Has there been a collision recently 
  If(counter - collisionCounter >= 300) Then 
    collide = 0 
    collisionCounter = 0 
  EndIf 
  
  GraphicsWindow.KeyDown = OnKeyDown 
  
  'Update the ball's position based on the X and Y velocity 
  ballX = ballX + ballDeltaX 
  ballY = ballY + ballDeltaY 
  
  'Test ball collision with the borders 
  
  'Rightmost border
  If(ballX >= width - ballRadius) Then 
    ballDeltaX = -ballDeltaX
    TextWindow.WriteLine("Red player loses!") 
  EndIf 
  
  'Leftmost border
  If(ballX <= 0) Then 
    ballDeltaX = -ballDeltaX
    TextWindow.WriteLine("Blue player loses!") 
  EndIf 
  
  If(ballY <= 0 Or ballY >= height - ballRadius) Then 
    ballDeltaY = -ballDeltaY
  EndIf 
  
  'Ball Collision with right paddle front 
  If(ballX > (paddleRightX-paddleWidth) And ((ballY > paddleRightY) And (ballY < paddleRightY + paddleHeight)) And collide = 0)  Then 
    ballDeltaX = -ballDeltaX
    collide = 1 
    collisionCounter = counter 
  EndIf 
  
  'Ball collision with right paddle top and bottom 
  If(ballX > (paddleRightX-paddleWidth) And  (ballY = paddleRightY Or ballY = paddleRightY + paddleHeight) And collide = 0) Then 
    ballDeltaY = -ballDeltaY 
    ballDeltaX = -ballDeltaX
    collide = 1
    collisionCounter = counter 
  EndIf 
  
  'Ball collision with left paddle front 
  If(ballX < (paddleLeftX+paddleWidth)  And ((ballY > paddleLeftY) And (ballY < paddleLeftY + paddleHeight)) And collide = 0) Then 
    ballDeltaX = -ballDeltaX
    collide = 1
    collisionCounter = counter
  EndIf 
  
  'Ball collision with left paddle top and bottom FIX THIS IF STATEMENT 
  If((ballX < (paddleLeftX+paddleWidth)) And (ballY = paddleLeftY Or ballY = (paddleLeftY + paddleHeight)) And collide = 0) Then 
    ballDeltaY = -ballDeltaY
    ballDeltaX = -ballDeltaX 
    collide = 1
    collisionCounter = counter
  EndIf 
  
  Program.Delay(5) 
  counter = counter + 1
  Shapes.Move(ball, ballX, ballY) 
  
EndWhile

'Handle the controls   
Sub OnKeyDown 
  'Handle the 'left' player 
    If (GraphicsWindow.LastKey = "A") And (paddleLeftY > (14)) Then 
      paddleLeftY = paddleLeftY - 14
    ElseIf (GraphicsWindow.LastKey = "Z") and (paddleLeftY < (height-paddleHeight-4)) Then 
      paddleLeftY = paddleLeftY + 14 
    EndIf 
    Shapes.Move(paddleLeft, paddleLeftX, paddleLeftY)
   
    
  'Handle the 'Right' player 
  If (GraphicsWindow.LastKey = "Up") And (paddleRightY > 14) Then
    paddleRightY = paddleRightY - 14 
  ElseIf (GraphicsWindow.LastKey = "Down") And (paddleRightY < (height-paddleHeight-4)) Then
    paddleRightY = paddleRightY + 14 
  EndIf
  Shapes.Move(paddleRight, paddleRightX, paddleRightY) 
EndSub 